module.exports = { contents: "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _GCInputLabel = require('./GCInputLabel');\n\nvar _GCInputLabel2 = _interopRequireDefault(_GCInputLabel);\n\nvar _GCInputSVG = require('./GCInputSVG');\n\nvar _GCInputSVG2 = _interopRequireDefault(_GCInputSVG);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar GCSelect = function (_Component) {\n  _inherits(GCSelect, _Component);\n\n  function GCSelect(props) {\n    _classCallCheck(this, GCSelect);\n\n    var _this = _possibleConstructorReturn(this, (GCSelect.__proto__ || Object.getPrototypeOf(GCSelect)).call(this, props));\n\n    _this.state = {\n      isActive: false,\n      searchActive: false,\n      index: -1,\n      selection: _this.getValue(props.options, _this.props.value) || ''\n    };\n    return _this;\n  }\n\n  _createClass(GCSelect, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var props = this.props;\n      if (nextProps.value !== props.value || this.state.searchActive) {\n        this.setState({\n          selection: this.getValue(props.options, nextProps.value),\n          searchActive: false\n        });\n      }\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return nextProps.value !== this.props.value || nextState.searchActive || this.state.isActive !== nextState.isActive || nextProps.dynamicClasses !== this.props.dynamicClasses || nextState.index !== this.state.index;\n    }\n  }, {\n    key: 'getOpts',\n    value: function getOpts(options) {\n      var _this2 = this;\n\n      if (options.length === 0) {\n        return _react2.default.createElement(\n          'li',\n          {\n            className: 'gc-select__drop-down__option gc-select__drop-down__option--no-results',\n            key: _lodash2.default.uniqueId() },\n          _react2.default.createElement(\n            'label',\n            { htmlFor: this.props.name },\n            this.state.searchActive ? 'There are no matching results' : 'No available options'\n          )\n        );\n      }\n      return options.map(function (opt, index) {\n        var activeClass = opt.value === _this2.props.value ? 'gc-select__drop-down__option--active' : '';\n        var hoveredClass = _this2.state.index === index ? 'gc-select__drop-down__option--hover' : '';\n        var disabledClass = opt.disabled ? 'gc-select__drop-down__option--disabled' : '';\n        return _react2.default.createElement(\n          'li',\n          {\n            className: 'gc-select__drop-down__option ' + activeClass + ' ' + disabledClass + ' ' + hoveredClass,\n            key: _lodash2.default.uniqueId(),\n            onClick: function onClick() {\n              return _this2.handleChange(opt.value, opt.disabled);\n            } },\n          _react2.default.createElement(\n            'label',\n            { htmlFor: _this2.props.name },\n            opt.label\n          )\n        );\n      });\n    }\n  }, {\n    key: 'getSearchResults',\n    value: function getSearchResults(options, searchTxt) {\n      if (searchTxt === '') {\n        return options;\n      }\n      var pattern = new RegExp(searchTxt, 'i');\n      return _lodash2.default.filter(options, function (o) {\n        return pattern.test(o.label);\n      });\n    }\n  }, {\n    key: 'getValue',\n    value: function getValue(arr, value) {\n      var valArray = arr.filter(function (i) {\n        return i.value === value;\n      });\n      return _lodash2.default.isEmpty(valArray) ? undefined : valArray[0].label;\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(v) {\n      var _this3 = this;\n\n      var disabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!disabled) {\n        this.props.onChange(v);\n        this.setState({\n          isActive: false,\n          index: -1\n        }, function () {\n          return _this3.props.validateInput();\n        });\n      }\n    }\n  }, {\n    key: 'dropDownList',\n    value: function dropDownList(shouldOpen) {\n      var _this4 = this;\n\n      if (!shouldOpen) {\n        setTimeout(function () {\n          return _this4.setState({ isActive: false }, function () {\n            return _this4.props.validateInput();\n          });\n        }, 50);\n      } else {\n        this.setState({ isActive: true });\n      }\n    }\n  }, {\n    key: 'handleSearch',\n    value: function handleSearch(e) {\n      var v = e.target.value;\n      var state = this.state;\n      if (this.state.searchActive) {\n        state = { selection: v };\n      } else {\n        state = {\n          selection: v,\n          searchActive: true,\n          isActive: true\n        };\n      }\n      this.setState(state);\n    }\n  }, {\n    key: 'handleEnter',\n    value: function handleEnter(e) {\n      var _state = this.state,\n          selection = _state.selection,\n          index = _state.index,\n          searchActive = _state.searchActive;\n      var options = this.props.options;\n\n      var queryArray = searchActive ? this.getSearchResults(options, selection) : options;\n\n      if (e.keyCode === 13) {\n        e.preventDefault();\n        if (index > -1) {\n          this.handleChange(queryArray[index].value);\n        } else if (selection === '') {\n          this.handleChange(selection);\n        }\n      } else if (e.keyCode === 38 && index > -1) {\n        e.preventDefault();\n        this.setState({ index: index - 1 });\n      } else if (e.keyCode === 40 && queryArray.length - 1 > index) {\n        e.preventDefault();\n        this.setState({ index: index + 1 });\n      }\n    }\n  }, {\n    key: 'renderOptions',\n    value: function renderOptions(options) {\n      if (this.state.searchActive) {\n        return this.getOpts(this.getSearchResults(options, this.state.selection));\n      }\n      return this.getOpts(options);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this5 = this;\n\n      return _react2.default.createElement(\n        'div',\n        {\n          className: 'gc-select',\n          onBlur: function onBlur() {\n            return _this5.dropDownList(false);\n          } },\n        _react2.default.createElement('input', {\n          className: 'gc-select__input ' + this.props.dynamicClasses,\n          type: 'text',\n          value: this.state.selection,\n          placeholder: this.props.placeholder,\n          onClick: function onClick() {\n            return _this5.dropDownList(true);\n          },\n          onKeyDown: function onKeyDown(e) {\n            return _this5.handleEnter(e);\n          },\n          onChange: function onChange(e) {\n            return _this5.handleSearch(e);\n          } }),\n        _react2.default.createElement(_GCInputLabel2.default, {\n          title: this.props.title,\n          value: this.state.selection,\n          name: this.props.name,\n          required: this.props.required }),\n        this.state.isActive ? _react2.default.createElement(_GCInputSVG2.default, { type: 'chevronUp', className: 'gc-select__input-icon' }) : _react2.default.createElement(_GCInputSVG2.default, { type: 'chevronDown', className: 'gc-select__input-icon' }),\n        this.state.isActive && _react2.default.createElement(\n          'ul',\n          { className: 'gc-select__drop-down' },\n          this.renderOptions(this.props.options)\n        )\n      );\n    }\n  }]);\n\n  return GCSelect;\n}(_react.Component);\n\nGCSelect.propTypes = {\n  onChange: _propTypes2.default.func.isRequired,\n  placeholder: _propTypes2.default.string,\n  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]).isRequired,\n  name: _propTypes2.default.string.isRequired,\n  options: _propTypes2.default.array.isRequired,\n  dynamicClasses: _propTypes2.default.string.isRequired,\n  title: _propTypes2.default.string,\n  validateInput: _propTypes2.default.func.isRequired,\n  required: _propTypes2.default.bool.isRequired\n};\n\nGCSelect.defaultProps = {\n  placeholder: '',\n  title: ''\n};\n\nexports.default = GCSelect;",
dependencies: ["react","prop-types","lodash","./GCInputLabel","./GCInputSVG"],
sourceMap: {},
headerContent: undefined,
mtime: 1503958128000,
devLibsRequired : undefined
};