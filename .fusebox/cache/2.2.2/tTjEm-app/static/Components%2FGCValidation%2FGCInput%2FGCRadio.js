module.exports = { contents: "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar GCInput = function (_Component) {\n  _inherits(GCInput, _Component);\n\n  function GCInput() {\n    _classCallCheck(this, GCInput);\n\n    return _possibleConstructorReturn(this, (GCInput.__proto__ || Object.getPrototypeOf(GCInput)).apply(this, arguments));\n  }\n\n  _createClass(GCInput, [{\n    key: 'renderRadioOpts',\n    value: function renderRadioOpts() {\n      var _this2 = this;\n\n      var props = this.props;\n      return props.options.map(function (opt) {\n        var d = new Date();\n        var uid = d.getTime() * 2;\n        return _react2.default.createElement(\n          'div',\n          null,\n          _react2.default.createElement('input', {\n            type: 'radio',\n            value: opt.value,\n            key: uid,\n            name: props.name,\n            title: props.title,\n            checked: props.value === opt.value,\n            onChange: function onChange(e) {\n              return _this2.handleChange(e);\n            }\n          }),\n          opt.label\n        );\n      });\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(e) {\n      if (e.target.value === this.props.value && !this.props.required) {\n        this.props.onChange(\"\");\n      } else {\n        this.props.onChange(e.target.value);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      // const invalidClass = this.state.validationMessage ? 'gc-input--invalid' : '';\n      var disabledClass = this.props.disabled ? 'gc-input--disabled' : '';\n      return _react2.default.createElement(\n        'div',\n        { className: disabledClass + ' ' + this.props.extendedClass },\n        this.renderRadioOpts()\n      );\n    }\n  }]);\n\n  return GCInput;\n}(_react.Component);\n\nGCInput.propTypes = {\n  extendedClass: _propTypes2.default.string,\n  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool]),\n  stateName: _propTypes2.default.string.isRequired,\n  disabled: _propTypes2.default.bool,\n  name: _propTypes2.default.string,\n  onChange: _propTypes2.default.func.isRequired,\n  customErrorMessage: _propTypes2.default.string,\n  touchedByParent: _propTypes2.default.bool,\n  sendResultsToForm: _propTypes2.default.func,\n  options: _propTypes2.default.array,\n  title: _propTypes2.default.string\n};\n\nGCInput.defaultProps = {\n  extendedClass: '',\n  value: null,\n  disabled: false,\n  name: '',\n  customRegex: null,\n  customErrorMessage: null,\n  touchedByParent: false,\n  sendResultsToForm: null,\n  options: [],\n  title: null\n};\n\nexports.default = GCInput;",
dependencies: ["react","prop-types"],
sourceMap: {},
headerContent: undefined,
mtime: 1503951121000,
devLibsRequired : undefined
};