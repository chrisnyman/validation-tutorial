module.exports = { contents: "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar GCCheckbox = function (_Component) {\n  _inherits(GCCheckbox, _Component);\n\n  function GCCheckbox() {\n    _classCallCheck(this, GCCheckbox);\n\n    return _possibleConstructorReturn(this, (GCCheckbox.__proto__ || Object.getPrototypeOf(GCCheckbox)).apply(this, arguments));\n  }\n\n  _createClass(GCCheckbox, [{\n    key: 'matchValues',\n    value: function matchValues(arr, value) {\n      return arr.includes(value);\n    }\n  }, {\n    key: 'removeFromArray',\n    value: function removeFromArray(arr, item) {\n      var index = arr.findIndex(function (el) {\n        return item === el;\n      });\n      arr.splice(index, 1);\n      return arr;\n    }\n  }, {\n    key: 'convertToArray',\n    value: function convertToArray(str) {\n      if (str === '') {\n        return [];\n      } else if (str.includes(', ')) {\n        return str.split(', ');\n      } else {\n        return [str];\n      }\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(e) {\n      var props = this.props;\n      if (props.options.length === 0) {\n        this.props.onChange(!props.value);\n      } else {\n        var selectedValue = e.target.value;\n        var prevValue = typeof props.value === 'string' ? this.convertToArray(props.value) : props.value.map(function (i) {\n          return i;\n        });\n        var newArray = prevValue;\n\n        if (prevValue.includes(selectedValue)) {\n          newArray = this.removeFromArray(prevValue, selectedValue);\n        } else {\n          newArray.push(selectedValue);\n        }\n        this.props.onChange(newArray);\n      }\n    }\n  }, {\n    key: 'renderCheckboxOpts',\n    value: function renderCheckboxOpts() {\n      var _this2 = this;\n\n      var props = this.props;\n      return props.options.map(function (opt, i) {\n        var d = new Date();\n        var uid = d.getTime() + i;\n        return _react2.default.createElement(\n          'div',\n          null,\n          _react2.default.createElement('input', {\n            type: 'checkbox',\n            value: opt.value,\n            key: uid,\n            name: props.name,\n            title: props.title,\n            onChange: function onChange(e) {\n              return _this2.handleChange(e);\n            },\n            checked: _this2.matchValues(props.value, opt.value),\n            disabled: _this2.props.disabled\n          }),\n          opt.label\n        );\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var props = this.props;\n      var disabledClass = props.disabled ? 'gc-input--disabled' : '';\n      if (props.options.length >= 1) {\n        return _react2.default.createElement(\n          'div',\n          { className: disabledClass + ' ' + props.extendedClass },\n          this.renderCheckboxOpts()\n        );\n      } else {\n        return _react2.default.createElement('input', {\n          className: disabledClass + ' ' + props.extendedClass,\n          type: 'checkbox',\n          name: props.name,\n          title: props.title,\n          onChange: function onChange(e) {\n            return _this3.handleChange(e);\n          },\n          checked: props.value,\n          disabled: this.props.disabled\n        });\n      }\n    }\n  }]);\n\n  return GCCheckbox;\n}(_react.Component);\n\nGCCheckbox.propTypes = {\n  extendedClass: _propTypes2.default.string,\n  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool, _propTypes2.default.array]),\n  stateName: _propTypes2.default.string.isRequired,\n  disabled: _propTypes2.default.bool,\n  name: _propTypes2.default.string,\n  onChange: _propTypes2.default.func.isRequired,\n  customErrorMessage: _propTypes2.default.string,\n  touchedByParent: _propTypes2.default.bool,\n  sendResultsToForm: _propTypes2.default.func,\n  options: _propTypes2.default.array,\n  title: _propTypes2.default.string,\n  multiple: _propTypes2.default.bool\n};\n\nGCCheckbox.defaultProps = {\n  extendedClass: '',\n  value: null,\n  disabled: false,\n  name: '',\n  customRegex: null,\n  customErrorMessage: null,\n  touchedByParent: false,\n  sendResultsToForm: null,\n  options: [],\n  title: null,\n  multiple: false\n};\n\nexports.default = GCCheckbox;",
dependencies: ["react","prop-types","lodash"],
sourceMap: {},
headerContent: undefined,
mtime: 1503951121000,
devLibsRequired : undefined
};